{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor55 MC55_string = motor55(PORT17, false);\n\nmotor55 MC55_pulley = motor55(PORT16, false);\n\nservo ServoE = servo(Brain.ThreeWirePort.E);\nmotor55 MC55_3 = motor55(PORT3, false);\n\nmotor55 MC55_4 = motor55(PORT4, false);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint voltageSet = 4;\nint wheelVoltage = 8;\nint configuration = 0;\nbool serv = false;\n\nvoid voltUp() {\n  voltageSet++;\n}\n\nvoid voltDown() {\n  voltageSet--;\n}\n\nvoid wheelUp(){\n  wheelVoltage ++;\n}\n\nvoid wheelDown(){\n  wheelVoltage --;\n}\n\nvoid configCycle(){\n  configuration+=1;\n  configuration%=2;\n}\n\nvoid servSet() {\n  if (serv) {\n    ServoE.setPosition(90, degrees);\n  } else {\n    ServoE.setPosition(-90, degrees);\n  }\n  serv = !serv;\n}\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n  // Begin project code\n  Controller1.ButtonR1.pressed(voltUp);\n  Controller1.ButtonR2.pressed(voltDown);\n  Controller1.ButtonL1.pressed(servSet);\n  Controller1.ButtonLeft.pressed(configCycle);\n  Controller1.ButtonA.pressed(wheelUp);\n  Controller1.ButtonY.pressed(wheelDown);\n  float leftvel = 0;\n  float rightvel = 0;\n  while (true){\n    Controller1.Screen.setCursor(1, 1);\n    Controller1.Screen.print(\"Current voltage: %d    Driving Config: %d   Wheel Voltage: %d\", voltageSet, configuration, wheelVoltage);\n    if (Controller1.ButtonUp.pressing()){\n      MC55_string.spin(forward, 4.0, volt);\n    }\n    else if (Controller1.ButtonDown.pressing()){\n      //MC55_string.setVelocity(100, percent);\n      MC55_string.spin(reverse, 24.0, volt);\n    }\n    else{\n      MC55_string.stop();\n    }\n    if (Controller1.ButtonX.pressing()){\n      MC55_pulley.spin(forward, voltageSet * 2, volt);\n    }\n    else if (Controller1.ButtonB.pressing()){\n      MC55_pulley.spin(reverse, voltageSet * 0.5, volt);\n    }\n    else{\n      MC55_pulley.stop();\n    }\n    //Tank Drive\n    if (configuration == 0){\n      if (abs(Controller1.Axis3.position())>15){\n        MC55_3.setVelocity(Controller1.Axis3.position());\n        MC55_3.spin(forward,wheelVoltage,volt);\n      } //left\n      if (abs(Controller1.Axis2.position())>15){\n        MC55_4.setVelocity(Controller1.Axis2.position());\n        MC55_4.spin(forward,wheelVoltage,volt);\n      } //right\n    }\n    if (configuration == 1){\n      leftvel = 0;\n      rightvel = 0;\n      if (abs(Controller1.Axis2.position())>10){\n        leftvel+=Controller1.Axis2.position();\n        rightvel+=Controller1.Axis2.position();\n      }\n      if (abs(Controller1.Axis1.position())>10){\n        leftvel-=Controller1.Axis1.position();\n        rightvel+=Controller1.Axis1.position();\n      }\n      MC55_4.setVelocity(rightvel,percent);\n      MC55_3.setVelocity(rightvel,percent);\n      MC55_3.spin(forward,wheelVoltage,volt);\n      MC55_4.spin(forward,wheelVoltage,volt);\n    }\n  }\n}\n","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[17],"name":"MC55_string","customName":true,"deviceType":"MC55","deviceClass":"motor55","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[16],"name":"MC55_pulley","customName":true,"deviceType":"MC55","deviceClass":"motor55","setting":{"reversed":"false","fwd":"forward","rev":"reverse","id":"partner"},"triportSourcePort":22},{"port":[5],"name":"ServoE","customName":false,"deviceType":"Servo","deviceClass":"servo","setting":{"id":"partner"},"triportSourcePort":22},{"port":[3],"name":"MC55_3","customName":false,"deviceType":"MC55","deviceClass":"motor55","setting":{"reversed":"false","fwd":"forward","rev":"reverse","id":"partner"}},{"port":[4],"name":"MC55_4","customName":false,"deviceType":"MC55","deviceClass":"motor55","setting":{"reversed":"false","fwd":"forward","rev":"reverse","id":"partner"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.61.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"aiVisionSettings":{"colors":[],"codes":[],"tags":true,"AIObjects":true,"AIObjectModel":[],"aiModelDropDownValue":null}}